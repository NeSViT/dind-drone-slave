global
        log /dev/log    local0
        maxconn 2048
        daemon
        ca-base /etc/haproxy
        crt-base /etc/haproxy
        tune.ssl.default-dh-param 2048
        ssl-default-bind-ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!3DES:!MD5:!PSK
        ssl-default-bind-options no-sslv3

defaults
        log global
        timeout client 30s
        timeout server 120s
        timeout connect 5s
        mode http
        balance roundrobin
        option httplog
        option redispatch
        option httpclose
        option forwardfor header X-Client
        option forwardfor
        option httpchk
        cookie SERVERID insert indirect nocache

listen stats
        bind *:9000
        stats enable
        stats auth user:user
        stats uri /
        stats realm Haproxy\ Statistics
        stats show-legends
        stats show-desc registry
        stats show-node
        stats admin if TRUE

userlist auth_list
        group microservices users docker,user
        user docker insecure-password pocker
        user user insecure-password user

frontend https
        bind *:443 ssl crt 6-an.lab.int.pem crt 6-a.lab.int.pem
        http-request add-header X-Forwarded-Proto https if { ssl_fc }
        acl registry hdr(host) -i 6-a.lab.int
        acl nexus hdr(host) -i 6-an.lab.int
        # Registry Auth
        acl auth_registry http_auth_group(auth_list) microservices
        use_backend registry_backend_auth if !auth_registry { ssl_fc } registry
        use_backend nexus_backend if nexus

        default_backend registry_backend
      #  default_backend nexus_backend

backend registry_backend
        option httpchk HEAD /v2 HTTP/1.0
        server node1 10.0.0.61:5000 check

backend registry_backend_auth
        errorfile 503 /etc/haproxy/registry_auth.http

backend nexus_backend
	#server node1 10.0.0.61:8081 check
	server node2 10.0.0.61:5001 check
